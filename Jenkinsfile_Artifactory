def server = Artifactory.server 'ARTIFACTORY_SERVER'
def rtMaven = Artifactory.newMavenBuild()
def buildInfo
pipeline {
	agent {
        label "QA"
    }
	environment {
        EMAIL_RECIPIENTS = 'shantu.bande@gmail.com'
    }
	stages {
        stage ('Initialize') {
            steps {
                bat '''
                    echo "JAVA_HOME = %JAVA_HOME%"
                    echo "M2_HOME = %M2_HOME%"
                '''
            }
        }

        stage('clean') {
            steps {
				bat 'mvn clean'
			}
        }
        stage("Unit testing") { 
			steps {
				bat 'mvn test'           
			}			
		}
        stage('package') {
            steps {
				bat 'mvn package'
            }
        }
		stage('artifact') {
			steps {
				archive 'target/*.war'
            }
			
		}
		stage ('Artifactory configuration') {
			rtMaven.tool = M2_HOME // Tool name from Jenkins configuration
			rtMaven.deployer releaseRepo: 'libs-release-local', snapshotRepo: 'libs-snapshot-local', server: server
			rtMaven.resolver releaseRepo: 'libs-release', snapshotRepo: 'libs-snapshot', server: server
			rtMaven.deployer.deployArtifacts = false // Disable artifacts deployment during Maven run
			buildInfo = Artifactory.newBuildInfo()
		}
		stage ('deploy'){
			steps {
				bat '''copy C:\\Users\\sbande\\Desktop\\201\\Jenkins\\slaves\\workspace\\EventRegistrationSystem_Pipeline_Artifactory\\target\\EventRegistrationSystem.war C:\\Users\\sbande\\Desktop\\201\\Jenkins\\Tomcat8\\webapps\\'''
            }
		}
		stage ('Publish build info') {
			server.publishBuildInfo buildInfo
		}
	}
	
}
